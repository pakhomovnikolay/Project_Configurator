<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.com/icons/"
                    >

    <SolidColorBrush x:Key="CustomButton.Static.Background" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="CustomButton.Static.Border" Color="Black"/>
    <SolidColorBrush x:Key="CustomButton.MouseOver.Background" Color="#FF8AA9C8"/>
    <SolidColorBrush x:Key="CustomButton.MouseOver.Border" Color="Black"/>
    <SolidColorBrush x:Key="CustomButton.Pressed.Background" Color="SlateGray"/>
    <SolidColorBrush x:Key="CustomButton.Pressed.Border" Color="Black"/>
    <SolidColorBrush x:Key="CustomButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="CustomButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="CustomButton.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="CloseButton.Static.Background" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="CloseButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Background" Color="#FFE02121"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Foreground" Color="White"/>
    <SolidColorBrush x:Key="CloseButton.Pressed.Background" Color="#FFD26565"/>
    <SolidColorBrush x:Key="CloseButton.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="CloseButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="CloseButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="CloseButton.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="HideButton.Static.Background" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="HideButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="HideButton.MouseOver.Background" Color="Gainsboro"/>
    <SolidColorBrush x:Key="HideButton.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="HideButton.MouseOver.Foreground" Color="White"/>
    <SolidColorBrush x:Key="HideButton.Pressed.Background" Color="SlateGray"/>
    <SolidColorBrush x:Key="HideButton.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="HideButton.Disabled.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="HideButton.Disabled.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="HideButton.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="CloseButton.fa5.Foreground" Color="#FFD0D0D0"/>
    <SolidColorBrush x:Key="HideButton.fa5.Foreground" Color="#FFA7A7A7"/>

    <ControlTemplate x:Key="RoundButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true"
                CornerRadius="15"
                >
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CustomButton.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CustomButton.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CustomButton.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CustomButton.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CustomButton.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CustomButton.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CustomButton.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true"
                CornerRadius="5"
                >
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CustomButton.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CustomButton.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CustomButton.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CustomButton.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CustomButton.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CustomButton.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CustomButton.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CloseButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true"
                >
            <DockPanel>
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  />
                <fa:FontAwesome Icon="Solid_Times" FontSize="16" Foreground="{StaticResource CloseButton.fa5.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CloseButton.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CloseButton.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CloseButton.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CloseButton.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HideButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true"
                >
            <DockPanel>
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  />
                <fa:FontAwesome x:Name="Regular_WindowMinimize" Icon="Regular_WindowMinimize" Foreground="{StaticResource HideButton.fa5.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource HideButton.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MaximizedButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true"
                >
            <DockPanel>
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  />
                <fa:FontAwesome Icon="Regular_WindowMaximize" VerticalAlignment="Center" HorizontalAlignment="Center"
                                Foreground="{StaticResource HideButton.fa5.Foreground}"/>
            </DockPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource HideButton.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MinimizedButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true"
                >
            <DockPanel>
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  />
                <fa:FontAwesome Icon="Regular_WindowRestore" Foreground="{StaticResource HideButton.fa5.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource HideButton.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HideButton.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource HideButton.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template" Value="{StaticResource RoundButtonControlTemplate}"/>
    </Style>

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource CustomButtonControlTemplate}"/>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource CloseButtonControlTemplate}"/>
    </Style>

    <Style x:Key="HideButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource HideButtonControlTemplate}"/>
    </Style>

    <Style x:Key="MaximizedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource MaximizedButtonControlTemplate}"/>
    </Style>

    <Style x:Key="MinimizedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource MinimizedButtonControlTemplate}"/>
    </Style>



</ResourceDictionary>